import java.io.*;
import java.util.*;

public class Solution {
	BufferedReader in;
	StringTokenizer st;
	PrintWriter out;

	void solve() throws IOException {
		while(in.ready()) {
		String ns = in.readLine();
		char[] s = ns.toCharArray();
		int n = ns.length();

		int[] d1 = new int[n + 1];
		int l = 0;
		int r = 0;
		for (int i = 0; i < n; i++) {
			int k = 1;
			if (i <= r)
				k = Math.min(d1[l + r - i], r - i);

			while (i - k >= 0 && i + k < n && s[i - k] == s[i + k])
				k++;
			d1[i] = k;
			if (i + k - 1 > r) {
				l = i - k + 1;
				r = i + k - 1;
			}
		}
		for (int i = 0; i < n; i++) {
			out.print(d1[i] + " ");
		}
		out.println();
		int[] d2 = new int[n + 1];
		l = 0;
		r = 0;
		for (int i = 0; i < n; i++) {
			int k = 0;
			if (i <= r) {
				k = Math.min(d2[l + r - i + 1], r - i + 1);
			}
			while (i + k < n && i - k - 1 >= 0 && s[i + k] == s[i - k - 1])
				k++;
			d2[i] = k;
			if (i + k - 1 > r) {
				l = i - k;
				r = i + k - 1;
			}
		}
		for (int i = 0; i < n; i++) {
			out.print(d2[i] + " ");
		}
		}
	}

	Solution() throws IOException {
		Locale.setDefault(Locale.US);
		in = new BufferedReader(new InputStreamReader(System.in));
		// in = new BufferedReader(new FileReader("in"));
		out = new PrintWriter(new OutputStreamWriter(System.out));
		// out = new PrintWriter("out");
		solve();
		in.close();
		out.close();
	}

	String ns() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			st = new StringTokenizer(in.readLine());
		}
		return st.nextToken();
	}

	int ni() throws IOException {
		return Integer.valueOf(ns());
	}

	double nd() throws IOException {
		return Double.valueOf(ns());
	}

	long nl() throws IOException {
		return Long.valueOf(ns());
	}

	public static void main(String[] args) throws IOException {
		new Solution();
	}
}