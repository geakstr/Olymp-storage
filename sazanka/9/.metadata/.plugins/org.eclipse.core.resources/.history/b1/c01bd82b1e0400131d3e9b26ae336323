import java.io.*;
import java.util.*;

public class Solution {
	BufferedReader in;
	StringTokenizer st;
	PrintWriter out;

	char[] s = "aaa$".toCharArray();
	int n;

	class node {
		int l, r, par, link;
		Map<Character, Integer> next;

		node(int l, int r, int par) {
			this.l = l;
			this.r = r;
			this.par = par;
			this.link = -1;
		}

		node() {
			this(0, 0, -1);
		}

		int len() {
			return r - l;
		}

		int get(char c) {
			if (!next.containsKey(c))
				next.put(c, -1);
			return next.get(c);
		}
	}

	node[] t;
	int sz;

	class state {
		int v, pos;

		state(int v, int pos) {
			this.v = v;
			this.pos = pos;
		}
	}

	state ptr = new state(0, 0);

	state go(state st, int l, int r) {
		while (l < r) {
			if (st.pos == t[st.v].len()) {
				st = new state(t[st.v].get(s[l]), 0);
				if (st.v == -1)
					return st;
			} else {
				if (s[t[st.v].l + st.pos] != s[l]) {
					return new state(-1, -1);
				}
				if (r - l < t[st.v].len() - st.pos) {
					return new state(st.v, st.pos + r - l);
				}
				l += t[st.v].len() - st.pos;
				st.pos = t[st.v].len();
			}
		}
		return st;
	}

	int split(state st) {
		if (st.pos == t[st.v].len())
			return st.v;
		if (st.pos == 0)
			return t[st.v].par;
		node v = t[st.v];
		int id = sz++;
		t[id] = new node(v.l, v.l + st.pos, v.par);
		t[v.par].get(s[v.l + st.pos]) = st.v;
	}

	void solve() throws IOException {

	}

	Solution() throws IOException {
		Locale.setDefault(Locale.US);
		in = new BufferedReader(new InputStreamReader(System.in));
		// in = new BufferedReader(new FileReader("in"));
		out = new PrintWriter(new OutputStreamWriter(System.out));
		// out = new PrintWriter("out");
		solve();
		in.close();
		out.close();
	}

	String ns() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			st = new StringTokenizer(in.readLine());
		}
		return st.nextToken();
	}

	int ni() throws IOException {
		return Integer.valueOf(ns());
	}

	double nd() throws IOException {
		return Double.valueOf(ns());
	}

	long nl() throws IOException {
		return Long.valueOf(ns());
	}

	public static void main(String[] args) throws IOException {
		new Solution();
	}
}
