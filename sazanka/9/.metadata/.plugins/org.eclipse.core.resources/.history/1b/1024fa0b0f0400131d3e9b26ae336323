import java.io.*;
import java.util.*;
import static java.lang.Math.*;

public class Solution {
	BufferedReader in;
	StringTokenizer st;
	PrintWriter out;

	void solve() throws IOException {
		String ns = in.readLine();
		char[] s = ns.toCharArray();
		Map<Character, Integer> m = new HashMap<Character, Integer>();

		for (int i = 0; i < s.length; i++) {
			if (m.containsKey(s[i]))
				m.put(s[i], m.get(s[i]) + 1);
			else
				m.put(s[i], 1);
		}
		
		int cnt = 0;
		for(Map.Entry<Character, Integer> en : m) {
			if(en.getValue() % 2 == 1) cnt++;
		}
	}

	Solution() throws IOException {
		Locale.setDefault(Locale.US);
		in = new BufferedReader(new InputStreamReader(System.in));
		// in = new BufferedReader(new FileReader("in"));
		out = new PrintWriter(new OutputStreamWriter(System.out));
		// out = new PrintWriter("out");
		solve();
		in.close();
		out.close();
	}

	String ns() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			st = new StringTokenizer(in.readLine());
		}
		return st.nextToken();
	}

	int ni() throws IOException {
		return Integer.valueOf(ns());
	}

	double nd() throws IOException {
		return Double.valueOf(ns());
	}

	long nl() throws IOException {
		return Long.valueOf(ns());
	}

	public static void main(String[] args) throws IOException {
		new Solution();
	}
}
