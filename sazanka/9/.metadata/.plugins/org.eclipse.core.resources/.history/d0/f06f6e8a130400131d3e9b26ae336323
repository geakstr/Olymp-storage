import java.io.*;
import java.util.*;

public class Solution {
	BufferedReader in;
	StringTokenizer st;
	PrintWriter out;

	void solve() throws IOException {
		String s = in.readLine();
		int[] letters = new int[26];
		for (int i = 0; i < s.length(); i++) {
			letters[s.charAt(i) - 'a']++;
		}
		int cnt = 0;
		int sum = 0;
		for (int i = 0; i < 26; i++) {
			if ((letters[i] & 1) == 1) {
				cnt++;
			}
			letters[i] >>= 1;
			sum += letters[i];
		}
		if (cnt > 1) {
			out.println(0);
			return;
		}
		long ret = 1;
		for (int i = 0; i < 26; i++) {
			if (letters[i] > 0) {
				ret *= f(letters[i], sum);
				sum -= letters[i];
			}
		}
		out.println(ret);

	}

	long fact(long a) {
		long ret = 1;
		for (int i = 2; i <= a; i++) {
			ret *= i;
		}
		return ret;
	}

	Solution() throws IOException {
		Locale.setDefault(Locale.US);
		// in = new BufferedReader(new InputStreamReader(System.in));
		in = new BufferedReader(new FileReader("in"));
		out = new PrintWriter(new OutputStreamWriter(System.out));
		// out = new PrintWriter("out");
		solve();
		in.close();
		out.close();
	}

	String ns() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			st = new StringTokenizer(in.readLine());
		}
		return st.nextToken();
	}

	int ni() throws IOException {
		return Integer.valueOf(ns());
	}

	double nd() throws IOException {
		return Double.valueOf(ns());
	}

	long nl() throws IOException {
		return Long.valueOf(ns());
	}

	public static void main(String[] args) throws IOException {
		new Solution();
	}
}
